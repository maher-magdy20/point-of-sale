{"version":3,"sources":["computer lab.js"],"names":["Order","_classCallCheck","this","_menu","_previousSales","_invoiceNumber","_order","_payment","amountPaid","type","changeTip","previousSales","length","undefined","invoiceNumber","highest","map","sku","reduce","a","b","Math","max","grandtotal","quantity","orderLine","currentLine","JSON","summary","subtotal","lineData","description","price","Utilities","roundToTwo","parseFloat","orderGrandTotal","getSummary","input","order","push","Ui","receiptDetails","index","payment","closeButton","forEach","tax","exportData","paymentSummary","currentPayment","date","_this","orderData","exportOrder","paymentData","exportPayment","hidePaypad","tipChange","menuArray","menuItem","currItem","Date","clearPayment","clearOrder","google","script","num","setData","stringify","_this2","taxRate","image","salesData","toString","data","splice","frag","document","createDocumentFragment","orderInstance","menu","item","menuElement","concat","convertFloatToString","createElement","node","className","dataString","setAttribute","innerHTML","appendChild","getElementById","querySelectorAll","button","addEventListener","addOrderLine","getAttribute","hasChildNodes","removeChild","childNodes","deleteOrderLine","parseInt","receiptLine","textContent","style","display","generateInvoiceNumber","changeTipTitle","paymentType","paypad","bool","float","toLocaleString","round","isNaN","backPaypad","clearPaypad","closeSale","numberPaypad","currentInput","currentAmountPaid","newAmountPaid","changePayment","newAmount","toSubtract","showPaypad","parse","mockMenuData","mockPreviousSalesData","mockPaymentsData"],"mappings":"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","file":"computer lab.min.js","sourcesContent":["  // close sale  and save/send data\r\n\r\n  class Order {\r\n      constructor() {\r\n          this._menu = [];\r\n          this._previousSales = [];\r\n          this._invoiceNumber = \"\";\r\n          this._order = [];\r\n          this._payment = {\r\n              amountPaid: 0,\r\n              type: \"\",\r\n              changeTip: 0\r\n          };\r\n      }\r\n\r\n      get menu() {\r\n          return this._menu;\r\n      }\r\n\r\n      set menu(menuArray) {\r\n          this._menu = [];\r\n\r\n          menuArray.forEach(menuItem => {\r\n              let currItem = {};\r\n              currItem.sku = menuItem[0];\r\n              currItem.description = menuItem[1];\r\n              currItem.price = menuItem[2];\r\n              currItem.taxRate = menuItem[3];\r\n              currItem.image = menuItem[4];\r\n              this._menu.push(currItem);\r\n          })\r\n      }\r\n\r\n      get previousSales() {\r\n          return this._previousSales;\r\n      }\r\n\r\n      set previousSales(salesData) {\r\n          this._previousSales = salesData;\r\n      }\r\n\r\n      get invoiceNumber() {\r\n          return this._invoiceNumber;\r\n      }\r\n\r\n      set invoiceNumber(num) {\r\n          this._invoiceNumber = num.toString();\r\n      }\r\n\r\n      get order() {\r\n          return this._order;\r\n      }\r\n\r\n      set order(data) {\r\n          this._order = data;\r\n      }\r\n\r\n      get payment() {\r\n          return this._payment;\r\n      }\r\n\r\n      set payment(payment) {\r\n          this._payment = payment;\r\n      }\r\n\r\n      generateInvoiceNumber() {\r\n          if (this.previousSales.length < 1 || this.previousSales == undefined) {\r\n              this.invoiceNumber = 1;\r\n          } else {\r\n              let skuArray = this.previousSales.map(sku => sku[1]);\r\n              let highest = skuArray.reduce(function(a, b) {\r\n                  return Math.max(a, b);\r\n              });\r\n              this.invoiceNumber = highest + 1;\r\n          }\r\n      }\r\n\r\n      addOrderLine(quantity, data) {\r\n          let currentLine = {};\r\n          let lineData = JSON.parse(data)\r\n\r\n          currentLine.sku = lineData.sku;\r\n          currentLine.description = lineData.description;\r\n          currentLine.quantity = quantity;\r\n          currentLine.price = Utilities.roundToTwo(parseFloat(lineData.price));\r\n          currentLine.subtotal = currentLine.quantity * currentLine.price;\r\n          currentLine.tax = Utilities.roundToTwo(lineData.taxRate * currentLine.subtotal);\r\n\r\n          this.order.push(currentLine);\r\n          Ui.receiptDetails(this);\r\n      }\r\n\r\n      deleteOrderLine(index) {\r\n          this.order.splice(index, 1);\r\n          Ui.receiptDetails(this)\r\n      }\r\n\r\n      clearOrder() {\r\n          this.order = [];\r\n\r\n          Ui.receiptDetails(this);\r\n      }\r\n      getSummary() {\r\n          const summary = {\r\n              subtotal: 0,\r\n              tax: 0,\r\n              grandtotal: 0\r\n          }\r\n\r\n          this.order.forEach(orderLine => {\r\n              summary.subtotal += orderLine.subtotal;\r\n              summary.tax += orderLine.tax;\r\n          })\r\n\r\n          summary.grandtotal = summary.subtotal + summary.tax;\r\n\r\n          return summary;\r\n      }\r\n\r\n      changePayment(input) {\r\n          const orderGrandTotal = this.getSummary().grandtotal;\r\n          if (input.amountPaid != null) this.payment.amountPaid = parseFloat(input.amountPaid);\r\n          if (input.type != null) this.payment.type = input.type;\r\n          if (this.payment.amountPaid >= orderGrandTotal) {\r\n              this.payment.changeTip = this.payment.amountPaid - orderGrandTotal;\r\n              Ui.closeButton(false);\r\n          } else {\r\n              this.payment.changeTip = 0;\r\n              Ui.closeButton(true)\r\n          }\r\n\r\n          Ui.paymentSummary(this);\r\n      }\r\n\r\n      clearPayment() {\r\n          this.payment = {\r\n              amountPaid: 0,\r\n              type: \"\",\r\n              changeTip: 0\r\n          };\r\n\r\n          Ui.paymentSummary(this);\r\n      }\r\n\r\n      exportOrder(date) {\r\n          let exportData = [];\r\n\r\n          this.order.forEach(orderLine => {\r\n              let currentLine = [];\r\n              currentLine[0] = date;\r\n              currentLine[1] = this.invoiceNumber;\r\n              currentLine[2] = orderLine.sku;\r\n              currentLine[3] = orderLine.quantity;\r\n              currentLine[4] = orderLine.price;\r\n              currentLine[5] = orderLine.tax;\r\n\r\n              exportData.push(currentLine);\r\n              this.previousSales.push(currentLine);\r\n          })\r\n\r\n          return exportData;\r\n      }\r\n\r\n      exportPayment(date) {\r\n          const currentPayment = [\r\n              []\r\n          ];\r\n          const tipChange = Utilities.roundToTwo(this.payment.amountPaid - this.getSummary().grandtotal);\r\n\r\n          currentPayment[0][0] = date;\r\n          currentPayment[0][1] = this.invoiceNumber;\r\n          currentPayment[0][2] = this.getSummary().grandtotal;\r\n          currentPayment[0][3] = this.payment.type;\r\n\r\n          if (this.payment.type == \"cash\") {\r\n              currentPayment[0][4] = 0;\r\n          } else {\r\n              currentPayment[0][4] = tipChange;\r\n          }\r\n          return currentPayment;\r\n      }\r\n\r\n      closeSale() {\r\n          const date = new Date();\r\n          const orderData = this.exportOrder(date);\r\n          const paymentData = this.exportPayment(date);\r\n          const exportData = {\r\n              order: orderData,\r\n              payment: paymentData\r\n          }\r\n\r\n          Ui.hidePaypad(this);\r\n          this.clearPayment();\r\n          this.clearOrder();\r\n          Ui.invoiceNumber(this);\r\n\r\n          google.script.run.setData(JSON.stringify(exportData));\r\n      }\r\n  }\r\n\r\n  class Ui {\r\n\r\n      static menu(orderInstance) {\r\n          let frag = document.createDocumentFragment();\r\n\r\n          orderInstance.menu.forEach(item => {\r\n              let menuElement = `<img src=\"${item.image}'\" alt=\"${item.description}\" class=\"menu-img\" style=\"width:150px;\">\r\n            <figcaption>${item.description}</figcaption>\r\n            <figcaption>${Utilities.convertFloatToString(item.price)}</figcaption>`\r\n\r\n              let node = document.createElement(\"figure\");\r\n              node.className = \"menu-item\";\r\n              let dataString = JSON.stringify({ sku: `${item.sku}`, description: `${item.description}`, price: `${item.price}`, taxRate: `${item.taxRate}` })\r\n              node.setAttribute(\"data-sku\", dataString);\r\n              node.innerHTML = menuElement;\r\n              frag.appendChild(node);\r\n          });\r\n\r\n          document.getElementById('menu').appendChild(frag);\r\n\r\n          document.querySelectorAll(\".menu-item\").forEach(button => {\r\n              button.addEventListener('click', () => {\r\n                  orderInstance.addOrderLine(1, button.getAttribute(\"data-sku\"));\r\n              })\r\n          })\r\n      }\r\n\r\n      static receiptDetails(orderInstance) {\r\n          let frag = document.createDocumentFragment();\r\n\r\n          orderInstance.order.forEach((orderLine, index) => {\r\n              let receiptLine = `<td class=\"description\">${orderLine.description}</td>\r\n            <td class=\"quantity\">${orderLine.quantity}</td>\r\n            <td class=\"price\">${Utilities.convertFloatToString(orderLine.price)}</td>\r\n            <td class=\"subtotal\">${Utilities.convertFloatToString(orderLine.subtotal)}</td>\r\n            <td class=\"delete\" data-delete=\"${index.toString()}\"><i class=\"fas fa-backspace\"></i></td>`\r\n\r\n              let node = document.createElement(\"tr\");\r\n              node.setAttribute(\"data-index\", `${index.toString()}`);\r\n              node.innerHTML = receiptLine;\r\n              frag.appendChild(node);\r\n          });\r\n\r\n          let receiptDetails = document.getElementById(\"receipt-details\");\r\n          while (receiptDetails.hasChildNodes()) {\r\n              receiptDetails.removeChild(receiptDetails.childNodes[0]);\r\n          }\r\n\r\n          receiptDetails.appendChild(frag);\r\n          this.summary(orderInstance);\r\n\r\n          document.querySelectorAll('.delete').forEach(button => {\r\n              button.addEventListener('click', () => {\r\n                  orderInstance.deleteOrderLine(parseInt(button.getAttribute(\"data-delete\")));\r\n              })\r\n          })\r\n      }\r\n\r\n      static invoiceNumber(orderInstance) {\r\n          orderInstance.generateInvoiceNumber();\r\n          const invoiceNumber = orderInstance.invoiceNumber;\r\n          document.getElementById('invoice-number').textContent = `Invoice# ${invoiceNumber}`\r\n      }\r\n      static summary(orderInstance) {\r\n          const summary = orderInstance.getSummary();\r\n          const subtotal = document.getElementById(\"subtotal-summary\");\r\n          const tax = document.getElementById(\"tax-summary\");\r\n          const grandtotal = document.getElementById(\"grandtotal-summary\");\r\n\r\n          subtotal.textContent = Utilities.convertFloatToString(summary.subtotal);\r\n          tax.textContent = Utilities.convertFloatToString(summary.tax);\r\n          grandtotal.textContent = Utilities.convertFloatToString(summary.grandtotal);\r\n      }\r\n\r\n      static showPaypad(orderInstance) {\r\n          const paypad = document.getElementById('payment-overlay');\r\n          paypad.style.display = \"grid\"\r\n      }\r\n\r\n      static hidePaypad(orderInstance) {\r\n          const paypad = document.getElementById('payment-overlay');\r\n          paypad.style.display = \"none\"\r\n      }\r\n\r\n\r\n      static paymentSummary(orderInstance) {\r\n          document.getElementById('amount-paid').textContent = Utilities.convertFloatToString(orderInstance.payment.amountPaid);\r\n\r\n          const changeTipTitle = document.getElementById('tip-change-title');\r\n          const paymentType = document.getElementById('payment-type');\r\n\r\n          if (orderInstance.payment.type === 'credit') {\r\n              changeTipTitle.textContent = \"Tip:\";\r\n              paymentType.textContent = \"CC\";\r\n          } else if (orderInstance.payment.type === 'cash') {\r\n              changeTipTitle.textContent = \"Change:\";\r\n              paymentType.textContent = \"Cash\";\r\n          } else {\r\n              changeTipTitle.textContent = \"Change:\";\r\n              paymentType.textContent = \"\";\r\n          }\r\n\r\n          document.getElementById(\"tip-change-value\").textContent = Utilities.convertFloatToString(orderInstance.payment.changeTip);\r\n      }\r\n\r\n\r\n      static closeButton(bool) {\r\n          const closeButton = document.getElementById('close-sale');\r\n          if (bool) {\r\n              closeButton.style.display = \"none\";\r\n          } else {\r\n              closeButton.style.display = \"grid\";\r\n          }\r\n      }\r\n  }\r\n\r\n  class Utilities {\r\n\r\n      static convertFloatToString(float) {\r\n          let priceParams = {\r\n              style: \"currency\",\r\n              currency: \"EGP\"\r\n          };\r\n\r\n          return float.toLocaleString(\"en-us\", priceParams);\r\n      }\r\n\r\n      static roundToTwo(num) {\r\n          return +(Math.round(num + \"e+2\") + \"e-2\");\r\n      }\r\n\r\n      static paypad(input, orderInstance) {\r\n          if (!isNaN(parseInt(input))) {\r\n              this.numberPaypad(parseInt(input), orderInstance);\r\n          } else if (input === \"back\") {\r\n              this.backPaypad(orderInstance);\r\n          } else if (input === \"clear\") {\r\n              this.clearPaypad(orderInstance);\r\n          } else {\r\n              orderInstance.closeSale();\r\n          }\r\n      }\r\n\r\n      static numberPaypad(input, orderInstance) {\r\n          const currentInput = this.roundToTwo(input * .01);\r\n          const currentAmountPaid = this.roundToTwo(orderInstance.payment.amountPaid);\r\n          const newAmountPaid = this.roundToTwo((currentAmountPaid * 10) + currentInput);\r\n\r\n          if (currentAmountPaid === 0) {\r\n              orderInstance.changePayment({ amountPaid: currentInput });\r\n          } else {\r\n              orderInstance.changePayment({ amountPaid: newAmountPaid });\r\n          }\r\n      }\r\n\r\n      static backPaypad(orderInstance) {\r\n          const currentPayment = orderInstance.payment.amountPaid;\r\n\r\n          if (currentPayment > 0) {\r\n              const toSubtract = ((currentPayment * 100) % 10) * 0.01;\r\n              const newAmount = (currentPayment - toSubtract) * 0.1;\r\n              orderInstance.changePayment({ amountPaid: newAmount });\r\n          }\r\n      }\r\n\r\n      static clearPaypad(orderInstance) {\r\n          orderInstance.changePayment({ amountPaid: 0 });\r\n      }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //-----------------------------------------------ORDER INSTANTIATION\r\n\r\n  //   function sheetData() {\r\n  //       google.script.run.withSuccessHandler(function(dataArray) {\r\n\r\n  //           items = Object.values(dataArray.items);\r\n  //           sales = dataArray.sales;\r\n\r\n  //           order.menu = items;\r\n  //           order.previousSales = sales;\r\n\r\n  //           Ui.menu(order);\r\n  //           Ui.invoiceNumber(order);\r\n  //       }).getData();\r\n  //   }\r\n\r\n  //   sheetData();\r\n\r\n\r\n\r\n\r\n\r\n  //----------------------------------------------STATIC EVENT LISTENERS\r\n\r\n  document.getElementById('clear-order').addEventListener('click', () => {\r\n      order.clearOrder();\r\n  })\r\n\r\n  document.querySelectorAll('.paypad-show').forEach(button => {\r\n      button.addEventListener('click', () => {\r\n          Ui.showPaypad(order);\r\n          order.changePayment(JSON.parse(button.getAttribute(\"data-payment-type\")));\r\n      })\r\n  })\r\n\r\n  document.getElementById('paypad-close').addEventListener('click', () => {\r\n      order.clearPayment();\r\n      Ui.hidePaypad(order);\r\n  })\r\n\r\n  document.querySelectorAll('.paypad-btn').forEach(button => {\r\n      button.addEventListener('click', () => {\r\n          Utilities.paypad(button.getAttribute(\"data-id\"), order);\r\n      })\r\n  })\r\n\r\n\r\n\r\n  const mockMenuData = [\r\n      [101, 'Hard Disk Drive 1TB', 750, 0.05, 'https://i.ibb.co/mRbLLYB/1.jpg'],\r\n      [102, 'Hard ssd 128GB', 343, 0.05, 'https://i.ibb.co/Rb0jTsL/1-1.jpg'],\r\n      [103, 'Toshiba Battery', 333, 0.05, 'https://i.ibb.co/FzqYwQT/1-2.jpg'],\r\n      [104, 'USB sound card adapter', 234, 0.05, 'https://i.ibb.co/3YSgc2Q/1-3.jpg'],\r\n      [105, 'Laptop Memory 8GB', 690, 0.05, 'https://i.ibb.co/wywBH0P/1-4.jpg'],\r\n      [106, 'Electron cooler', 105, 0.05, 'https://i.ibb.co/sWMQ5YD/1-5.jpg'],\r\n      [107, 'A fan for the computer', 125, 0.05, 'https://i.ibb.co/tqTWzyP/1-6.jpg'],\r\n      [108, 'External DVD Drive', 438, 0.05, 'https://i.ibb.co/D8yTJFR/1-7.jpg'],\r\n      [109, 'Flash Memory 16GB', 70, 0.05, 'https://i.ibb.co/fGnKrD1/1-8.jpg'],\r\n      [110, 'Mouse - Black', 25, 0.05, 'https://i.ibb.co/QNqGZyz/1-9.jpg'],\r\n      [111, 'Flash Memory 64GB', 120, 0.05, 'https://i.ibb.co/Y7xkR98/1-10.jpg'],\r\n      [112, 'memory card Toshiba 32GB', 80, 0.05, 'https://i.ibb.co/mBSkkCV/1-11.jpg'],\r\n      [113, 'OTG USB Flash Drive 32GB', 425, 0.05, 'https://i.ibb.co/P5yz223/1-12.jpg'],\r\n      [114, 'keyboard', 110, 0.05, 'https://i.ibb.co/WyhBnb3/1-13.jpg'],\r\n      [115, 'The Gemming Group', 300, 0.05, 'https://i.ibb.co/Zh26fM5/1-14.jpg'],\r\n  ];\r\n\r\n  const mockPreviousSalesData = [\r\n      [\"\", 4999, 101.0, 1.0, 10.99, 0.5495],\r\n      [\"\", 4999, 102.0, 2.0, 7.95, 0.3975],\r\n      [\"\", 4999, 103.0, 3.0, 8.96, 0.45],\r\n      [\"\", 5000, 106.0, 1.0, 6.99, 0.35],\r\n      [\"\", 5000, 107.0, 1.0, 5.95, 0.30]\r\n  ];\r\n\r\n  const mockPaymentsData = [\r\n      [\"\", 4999, 56.46, \"cc\", 5.00],\r\n      [\"\", 5000, 13.59, \"cash\", 0]\r\n  ]\r\n  const order = new Order();\r\n  order.menu = mockMenuData;\r\n  order.previousSales = mockPreviousSalesData;\r\n  Ui.menu(order);"]}